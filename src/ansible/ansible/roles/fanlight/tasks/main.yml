---
- name: Create control network
  docker_network:
    name: "{{ fanlight_network }}"

- name: Create CouchDB container
  docker_container:
    name: "couchdb-{{ fanlight_instance_id }}"
    image: "{{ couchdb_image }}"
    networks:
      - name: "{{ fanlight_network }}"
    purge_networks: yes
    restart_policy: "always"

- name: Init CouchDB
  docker_container:
    name: "setup-couchdb-{{ fanlight_instance_id }}"
    image: "{{ setup_couchdb_image }}"
    env:
      COUCH: "couchdb-{{ fanlight_instance_id }}:5984"
    networks:
      - name: "{{ fanlight_network }}"
    purge_networks: yes
    auto_remove: yes

- name: Create Controller
  docker_container:
    name: "controller-{{ fanlight_instance_id }}"
    image: "{{ controller_image }}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{ ansible_host_dir }}:/ansible"
    env:
      RACK_ENV: production
      FN_desktop_DefaultImage: "{{ desktop_image }}"
      FN_FanlightInstanceId: "{{ fanlight_instance_id }}"
      FN_services_couch_uri: "http://couchdb-{{ fanlight_instance_id }}:5984"
      FN_user_HomeDirRoot: "{{ home_dirs_root }}"
      FN_docker_pullImageIfNotFound: "true"
      FN_docker_registryAuth_username: "{{ fanlight_registry_user }}"
      FN_docker_registryAuth_password: "{{ fanlight_registry_user_password }}"
      FN_managedResources_ExecTimeoutSec: "{{ managedResources_ExecTimeoutSec }}" # comment this
      FN_managedResources_list: "{{ resources_list | to_json }}"  # comment this
      FN_users: "{{ users_add | to_json }}"
      FN_apps: "{{ apps_add | to_json }}"
      FN_volumes: "{{ volumes | to_json }}"
    labels: # comment this
      traefik.enable: "true"
      traefik.port: "4501"
      traefik.frontend.rule: "PathPrefixStrip:/controller"
      traefik.docker.network: "{{ fanlight_network }}"
    ports:
      - "4501:4501"
    networks:
      - name: "{{ fanlight_network }}"
    purge_networks: yes
    restart_policy: "always"

- name: Create Proxy
  docker_container:
    name: "proxy-{{ fanlight_instance_id }}"
    image: "{{ proxy_image }}"
    env:
      FN_FanlightInstanceId: "{{ fanlight_instance_id }}"
      FN_services_controller_uri: "http://controller-{{ fanlight_instance_id }}:4501"
      FN_proxy_websockifyPath: "websockify"
    labels:
      traefik.enable: "true"
      traefik.port: "4501"
      traefik.frontend.rule: "PathPrefixStrip:/proxy"
      traefik.docker.network: "{{ fanlight_network }}"
    ports:
      - "4502:4501"
    networks:
      - name: "{{ fanlight_network }}"
    purge_networks: yes
    restart_policy: "always"

- name: Create Vnclient
  docker_container:
    name: "vnclient-{{ fanlight_instance_id }}"
    image: "{{ vnclient_image }}"
    env:
      RACK_ENV: production
      FN_FanlightInstanceId: "{{ fanlight_instance_id }}"
      FN_services_controller_uri: "http://controller-{{ fanlight_instance_id }}:4501"
      FN_DesktopAccessURL: "{{ desktop_access_url }}/proxy"
      FN_SiteBaseURL: "{{ fanlight_instance_url }}/vnclient"
    labels:
      traefik.enable: "true"
      traefik.port: "4501"
      traefik.frontend.rule: "PathPrefixStrip:/vnclient"
      traefik.docker.network: "{{ fanlight_network }}"
    ports:
      - "4503:4501"
    networks:
      - name: "{{ fanlight_network }}"
    purge_networks: yes
    restart_policy: "always"
# comment this
- name: Create traefik configuration file
  template:
    src: traefik.j2
    dest: /etc/traefik.toml
    force: yes
# comment this
- name: Create Traefik
  docker_container:
    name: "traefik-{{ fanlight_instance_id }}"
    image: "{{ traefik_image }}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/traefik.toml:/etc/traefik/traefik.toml
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - name: "{{ fanlight_network }}"
    purge_networks: yes
    restart_policy: "always"
