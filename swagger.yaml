swagger: "2.0"
info:
  version: 0.1.0
  title: Openstack Big Data tools
  description: "This project provides scripts for Apache Spark cluster autodeploy in any Openstack environment with optional useful tools"
  license:
    name: License Here
#    url:
  contact:
    email: modis@ispras.ru
host: host.here.com
basePath: /home
schemes:
  - http
  - https
tags:
  - name: cluster
  - name: users
  - name: hosts
  - name: services
  - name: activities
  - name: events
  - name: yarn
paths:
  /clusters:
    get:
      tags:
        - cluster
      summary: Lists all known clusters
      description: "Метод возращает список существующих кластеров.
                    Предусмотрены возможности типизации кластеров и формирования краткого описания.
                    Пример ответа требует доработки."
      operationId: listClusters
      parameters:
        - name: clusterType
          description: "Тип кластера. Возможные значения: any (все), base (основные), compute (вычислительный). Значение по умолчанию - base"
          type: string
          default: base
          in: query
        - name: view
          description: "Полнота описания. Возможные значения: full (полное), summary (краткое). Значение по умолчанию - summary"
          type: string
          default: summary
          in: query
      produces:
        - application/json
      responses:
        200:
          description: "Ok. Возвращает список кластеров"
          schema:
            $ref: '#/definitions/Clusters'
        204:
          description: "Нет результатов, соответствующих запросу."
        400:
          description: "Некорректный запрос, проверьте параметры"
        401:
          description: "Не пройдена авторизация"
        403:
          description: "Не достаточно прав"
        404:
          description: "Not found. (может заменять 401, 403)"
#        406:
#          description: "Ресурс, определяемый запросом, может только формировать ответы, имеющие характеристики, не совместимые с принятыми заголовками, которые были отправлены в запросе."
#        415:
#          description: "Unsupported Media Type"
#        429:
#          description: "Too many Requests"
#        500:
#          description: "Internal server error"
#        502:
#          description: "Bad Gateway"
#        503:
#          description: "Service Unavailable"

    post:
      tags:
        - cluster
      summary: Creates a collection of clusters
      operationId: createClisters
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Clusters'
      responses:
        200:
          description: "OK"
        201:
          description: "OK. Возвращает список созданных кластеров"
          schema:
            $ref: '#/definitions/Clusters'
        202:
          description: "OK. Запрос в обработке"
          schema:
            $ref: '#/definitions/Clusters'
        204:
          description: "Нет результатов, соответствующих запросу."
        400:
          description: "Некорректный запрос, проверьте параметры"
        401:
          description: "Не пройдена авторизация"
        403:
          description: "Не достаточно прав"
        404:
          description: "Not found. (может заменять 401, 403)"
        #        406:
        #          description: "Ресурс, определяемый запросом, может только формировать ответы, имеющие характеристики, не совместимые с принятыми заголовками, которые были отправлены в запросе."
        #        415:
        #          description: "Unsupported Media Type"
        #        429:
        #          description: "Too many Requests"
        #        500:
        #          description: "Internal server error"
        #        502:
        #          description: "Bad Gateway"
        #        503:

  /clusters/{clusterName}:
    get:
      tags:
        - cluster
      summary: Reads information about cluster
      operationId: getCluster
      parameters:
        - name: clusterName
          in: path
          type: integer
          required: true
      produces:
        - application/json
      responses:
        200:
          description: OK
    put:
      tags:
        - cluster
      summary: Update an existing cluster
      operationId: updateCluster
      parameters:
        - name: clusterName
          in: path
          type: string
          required: true
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Cluster'
      responses:
        200:
          description: OK
    delete:
      tags:
        - cluster
      summary: Deletes an existing cluster
      operationId: deleteCluster
      parameters:
        - name: clusterName
          type: string
          in: path
          required: true
      responses:
        200:
          description: OK

  /cluster/{clusterName}/export:
    get:
      tags:
        - cluster
      summary: Export cluster template
      description: Export the cluster template for the given cluster.
                    If cluster does not have host templates defined it will export host templates based on roles assignment.
      operationId: exportCluster
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: exportAutoConfig
          in: query
          type: boolean
          description: Export configs set by the auto configuration
      responses:
        200:
          description: OK

  /clusters/{clusterName}/hosts:
    get:
      tags:
        - cluster
        - hosts
      summary: Lists hosts in cluster
      operationId: getClusterHosts
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
    delete:
      tags:
        - cluster
        - hosts
      summary: delete hosts from cluster
      operationId: deleteClusterHosts
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
    post:
      tags:
        - cluster
        - hosts
      summary: Update cluster hosts configuration
      operationId: updateClusterHosts
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK

  /clusters/{clusterName}/serviceTypes:
    get:
      tags:
        - cluster
        - services
      summary: Lists the services for the cluster
      operationId: listsClusterServices
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK

  /clusters/{clusterName}/utilization:
    get:
      tags:
        - cluster
      summary: Provides the resource utilization
      operationId: clusterUtilization
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
#        - daysOfWeek
#        - startHourOfDay
#        - endHourOfDay
#        - from
#        - to
#        - tanantType
      responses:
        200:
          description: OK

  /clusters/{clusterName}/commands/restart:
    post:
      tags:
        - cluster
        - services
      summary: Restart all services in cluster
      operationId: clusterRestartServices
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: services
          in: body
          schema:
            $ref: '#/definitions/ClusterServices'
      responses:
        200:
          description: OK

  /clusters/{clusterName}/commands/start:
    post:
      tags:
        - cluster
        - services
      summary: Start all services in cluster
      operationId: clusterStartServices
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK


  /clusters/{clusterName}/commands/stop:
    post:
      tags:
        - cluster
        - services
      summary: Stop all services in cluster
      operationId: clusterStopServices
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK

  /cluster/{clusterName}/hosts/{hostId}:
    delete:
      tags:
        - cluster
        - hosts
      summary: Delete host from cluster
      operationId: clusterDeleteHost
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: hostId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK

  /users:
    get:
      tags:
        - users
      summary: Returs a list of the user names configured in cthe system
      operationId: listUsers
      parameters:
        - name: view
          in: query
          type: string
      responses:
        200:
          description: OK
    post:
      tags:
        - users
      summary: Creates a list of users
      description: When creating new users,
                    the password property of each user should be their plain text password.
                    The returned user information will not contain any password information.
      operationId: createUsers
      parameters:
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Users'
      responses:
        200:
          description: OK

  /users/sessions:
    get:
      tags:
        - users
      summary: Return a list of the sessions associated with interactive authenticetad users.
      operationId: listsUsersSessions
      responses:
        200:
          description: OK

  /users/{userName}:
    get:
      tags:
        - users
      summary: Returns detailed information about a user
      operationId: getUser
      parameters:
        - name: userName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
    put:
      tags:
        - users
      summary: Updates the given user's informations.
      description: Note that the user's name cannot be changed
      operationId: updateUser
      parameters:
        - name: userName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
    delete:
      tags:
        - users
      summary: Deletes a user from system
      operationId: deleteUser
      parameters:
        - name: userName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK

  /hosts:
    get:
      tags:
        - hosts
      summary: Retutns the hostIds for all hosts in the system
      operationId: getHosts
      responses:
        200:
          description: OK
    post:
      tags:
        - hosts
      deprecated: true
      summary: Create one or more hosts
      description: You must specify at least the hostname and ipAddress in the request objects.
                    If no hostId is specified, it will be set to the hostname.
                    It is an error to try and create host with the same hostId as another host.
                    (May be used to create clusters with a single host)
      operationId: createHosts
      parameters:
        - name: configuration
          in: body
          required: true
          schema:
            $ref: '#/definitions/ClusterHost'
      responses:
        200:
          description: OK

    delete:
      tags:
        - hosts
      summary: Delete all hosts in the system
      operationId: deleteHosts
      responses:
        200:
          description: OK

  /hosts/{hostId}:
    get:
      tags:
        - hosts
      summary: Returns a specific Host in the system
      operationId: getHost
      parameters:
        - name: hostId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK
    put:
      tags:
        - hosts
      summary: Update an existing host in the system
      operationId: updateHost
      parameters:
        - name: hostId
          in: path
          required: true
          type: integer
        - name: view
          in: query
          type: string
      responses:
        200:
          description: OK
    delete:
      tags:
        - hosts
      summary: Delete a host from the system
      operationId: deleteHost
      parameters:
        - name: hostId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services:
    get:
      summary: Lists all services registered in cluster
      operationId: clusterListServices
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: view
          in: query
          type: string
      responses:
        200:
          description: OK
    post:
      summary: Creates a list of services.
      operationId: clusterCreateServices
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/ClusterServices'
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}:
    get:
      tags:
        - cluster
        - services
      summary: Retrieves details information about a service.
      operationId: clusterGetServiceInfo
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: view
          in: query
          type: string
      responses:
        200:
          description: OK
    put:
      tags:
        - cluster
        - services
      summary: Updates service information
      operationId: clusterUpdateServiceInfo
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
    delete:
      tags:
        - cluster
        - services
      summary: Deletes a service from the cluster
      operationId: clusterDeleteService
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}/clientConfig:
    get:
      tags:
        - cluster
        - services
      deprecated: true
      summary: Download a client configuration of service
      operationId: clusterServiceClientConfiguration
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}/config:
    get:
      tags:
        - cluster
        - services
      summary: Retrieves the configuration of a specific service.
      description: The "summary" view contains only the configured parameters, and configuration for role types that contain configured parameters.
                    The "full" view contains all available configuration parameters for the service and its role types. This mode performs validation on the configuration, which could take a few seconds on a large cluster (around 500 nodes or more).
      operationId: clusterServiceConfiguration
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: view
          in: query
          type: string
      responses:
        200:
          description: OK

    put:
      tags:
        - cluster
        - services
      summary: Updates the service configuration with the given values.
      description: If a value is set in the given configuration, it will be added to the service's configuration, replacing any existing entries. If a value is unset (its value is null), the existing configuration for the attribute will be erased, if any.
        Attributes that are not listed in the input will maintain their current values in the configuration.
      operationId: clusterUpdateServiceConfiguration
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: message
          in: query
          type: string
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}/roleTypes:
    get:
      tags:
        - cluster
        - services
      summary: List of supported role types for a service
      operationId: clusterServiceRoleTypes
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}/roles:
    get:
      tags:
        - cluster
        - services
      summary: List of all roles of a given service
      operationId: clusterServiceRoles
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
    post:
      tags:
        - cluster
        - services
      summary: Create new roles in a given service
      operationId: clusterServiceCreateRoles
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Role'
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}:
    get:
      tags:
        - cluster
        - services
      summary: Retrieved detailed information about a role
      operationId: clusterServiceRole
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: roleName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
    delete:
      tags:
        - cluster
        - services
      summary: Deletes a role from a given service
      operationId: clusterServiceRoleDelete
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: roleName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/config:
    get:
      tags:
        - cluster
        - services
      deprecated: true
      summary: Retrieves the configuration of a specific role.
      operationId: clusterRoleConfig
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: roleName
          in: path
          required: true
          type: string
        - name: view
          in: query
          type: string
      responses:
        200:
          description: OK
    put:
      tags:
        - cluster
        - services
      summary: Updates the role configuration with the given values.
      description: If a value is set in the given configuration, it will be added to the role's configuration, replacing any existing entries. If a value is unset (its value is null), the existing configuration for the attribute will be erased, if any.
        Attributes that are not listed in the input will maintain their current values in the configuration.
      deprecated: true
      operationId: clusterRoleConfigUpdate
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: roleName
          in: path
          required: true
          type: string
        - name: message
          in: query
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Role'
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}/roles/{roleName}/logs/full:
    get:
      tags:
        - cluster
        - services
      deprecated: true
      summary: Retrieves the log file for the role's main process
      operationId: clusterServiceRoleLog
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: roleName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}/activities:
    get:
      tags:
        - cluster
        - activities
      summary: Read all activities in the system
      operationId: clusterListActivities
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: maxResults
          description: The maximum number of activities to return.
          in: query
          type: integer
        - name: query
          description: The query to perform to find activities in the system. By default, this call returns top level (i.e. root) activities that have currently started.
            The query specifies the intersection of a list of constraints, joined together with semicolons (without spaces).
            ...
          in: query
          type: string
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}/activities/{activityId}:
    get:
      tags:
        - cluster
        - activities
      summary: Returns a specific activity in the system
      operationId: clusterGetActivity
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: activityId
          in: path
          required: true
          type: integer
        - name: view
          in: query
          type: string
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}/activities/{activityId}/metrics:
    get:
      tags:
        - cluster
        - activities
      summary: Fetch metric readings for a particular activity.
      description: By default, this call will look up all metrics available for the activity. If only specific metrics are desired, use the metrics parameter.
        By default, the returned results correspond to a 5 minute window based on the provided end time (which defaults to the current server time). The from and to parameters can be used to control the window being queried. A maximum window of 3 hours is enforced.
        When requesting a "full" view, aside from the extended properties of the returned metric data, the collection will also contain information about all metrics available for the activity, even if no readings are available in the requested window.
      deprecated: true
      operationId: clusterGetActivityMetrics
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: activityId
          in: path
          required: true
          type: integer
        - name: view
          in: query
          type: string
#        - from
#        - to
#        - metrics
      responses:
        200:
          description: OK

  /events:
    get:
      tags:
        - events
      summary: Allows you to query events in the system
      operationId: queryEvents
      parameters:
        - name: maxResults
          in: query
          type: integer
        - name: query
          description: The query to perform to find events in the system.
                    It accepts querying the intersection of a list of constraints, joined together with semicolons (without spaces).
                    ...
          in: query
          type: string
        - name: resultsOffset
          description: Specified the offset of events to return.
          in: query
          type: integer
      responses:
        200:
          description: OK


  /events/{eventId}:
    get:
      tags:
        - events
      summary: Returns a specific event in the system
      operationId: getEvent
      parameters:
        - name: eventId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}/yarnApplications:
    get:
      tags:
        - cluster
        - services
        - yarn
      summary: Returns a list of applications that satisfy the filter
      operationId: clusterServicesYarn
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: filter
          description: A filter to apply to the applications.
                A basic filter tests the value of an attribute and looks something like 'executing = true' or 'user = root'.
                Multiple basic filters can be combined into a complex expression using standard and / or boolean logic and parenthesis.
                An example of a complex filter is:'application_duration > 5s and (user = root or user = myUserName').
          in: query
          type: string
        - name: from
          in: query
          type: string
        - name: to
          in: query
          type: string
        - name: limit
          in: query
          type: integer
        - name: offset
          in: query
          type: integer
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}/yarnApplications/attributes:
    get:
      tags:
        - yarn
      summary: Returns the list of all attributes that the Service Monitor can associate with YARN applications.
      operationId: clusterServicesYarnAttributes
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK

  /clusters/{clusterName}/services/{serviceName}/yarnApplications/{applicationId}/kill:
    post:
      tags:
        - yarn
      summary: Kills an YARN Application
      operationId: clusterServicesYarnKill
      parameters:
        - name: clusterName
          in: path
          required: true
          type: string
        - name: serviceName
          in: path
          required: true
          type: string
        - name: applicationId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: OK

definitions:
  Clusters:
    type: object
    example:
      {
        "items": [{
          "name": "...",
          "displayName": "...",
          "fullVersion": "...",
          "maintenanceMode": true,
          "maintenanceOwners": [ "HOST", "ROLE" ],
          "services": [    {
            "name": "...",
            "type": "...",
            "clusterRef": { },
            "serviceState": "UNKNOWN",
            "healthSummary": "HISTORY_NOT_AVAILABLE",
            "configStalenessStatus": "STALE_REFRESHABLE",
            "clientConfigStalenessStatus": "STALE",
            "healthChecks": [ { }, { } ],
            "serviceUrl": "...",
            "roleInstancesUrl": "...",
            "maintenanceMode": true,
            "maintenanceOwners": [ "SERVICE", "SERVICE" ],
            "config": { },
            "roles": [ { }, { } ],
            "displayName": "...",
            "roleConfigGroups": [ { }, { } ],
            "replicationSchedules": [ { }, { } ],
            "snapshotPolicies": [ { }, { } ],
            "entityStatus": "STOPPING"
          }, {
            "name": "etc"
          } ],
          "parcels": [    {
            "product": "...",
            "version": "...",
            "stage": "...",
            "state": { },
            "clusterRef": { }
          }],
          "clusterUrl": "...",
          "hostsUrl": "...",
          "entityStatus": "HISTORY_NOT_AVAILABLE",
          "uuid": "...",
          "dataContextRefs": [{
            "name": "..."
          }, {
            "name": "..."
          } ],
          "clusterType": "..."
        }, {
          "name": "etc"
        } ]
      }
  Cluster:
    type: object
  ClusterHost:
    type: object
  ClusterServices:
    type: object
  Users:
    type: object
  Role:
    type: object